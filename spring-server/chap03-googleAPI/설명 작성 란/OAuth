
	OAuth (Open Authorization)
		제 3자에게	사용자가 인증을 할 수 있도록 허용해주는 프로토콜
		웹이나 모바일에서 사용자에 데이터에 대한 인증이나 권한을 부여할 수 있도록 함
	
	OAuth의 역할
		
		1. 인증(Authentication) : 
				사용자를 인증하고, 클라이언트가 프로그램에서 프로그램을 사용할 수 있도록 허용 또는 거부하는 과정
		
		2. 권한 부여(Authorization) :
				사용자가 프로그램에 대한 특정 작업을 할 수 있도록 권한을 부여
				**특정 작업 : 프로그램을 만든 사람이 만든 롤에 대한 작업
		
		3. 토큰 제공(Token) : 
				권한이 부여된 사용자에게는 특정 권한을 나타낼 수 있는 토큰을 생성해서 제공하고 관리
				
	OAuth (ver.1)
		서명으로 진행하다보니 복잡한 구조를 지님
		
	OAuth2.0
		http 쪽에서 흐를 수 있는 구조이기 때문에, 구현에 용이

	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			
	< Access Refresh >
		
		Access : 
			사용자 데이터에 허용하는데 사용하는 토큰, 주로 클라이언트와 서버 간 통신에서 주로 사용
			클라이언트의 요청에 대한 권한을 나타내며, 유효기간이 존재
			
		Refresh Token : 
			엑세스 토큰이 만료된 경우, 리프레시 토큰을 사용해서 새로운 토큰을 얻음
	
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	1. 클라이언트(Client) :
		프로그램에 접근할 수 있도록 허용하게 되면 클라이언트는 접근이 가능
	2. 오너(Owner) :
		데이터에 대한 권한을 부여하거나 거부하는 역할
	3. 권한(Authorization) :
		권한을 부여하고 토큰을 발급하는 역할
	4. 서버(Server) :
		보호되는 데이터를 지니고, 토큰이 유효한지 확인 후 클라이언트에게 정보를 제공